import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { BrowserRouter as Router, Navigate } from "react-router-dom";
import { Routes, Route } from 'react-router-dom';
import Unauthorized from './pages/auth/Unauthorized';
import ProtectedRoute from './components/route/ProtectedRoute';
import UserPage from './pages/user';
import HomePage from './pages/homepage';
import UserLayout from './components/layout/UserLayout';
import { UserBookSection } from './pages/user/UserBookSection';
import { UserBookReadingList } from './pages/user/UserBookReadingList';
import { BookDetailPage } from './pages/user/BookDetailPage';
import { AssignmentPage } from './pages/user/AssginmentPage';
import AssignmentDetail from './pages/assignment/AssignmentDetail';
import AdminLayout from './components/layout/AdminLayout';
import Dashboard from './pages/dashboard/Dashboard';
import Class from './pages/class/Class';
import DocumentPage from './pages/documents/DocumentPage';
import StatisticalPage from './pages/librarian/StatisticalPage';
import { AddBookPage } from './pages/librarian/AddBookPage';
import Request from './pages/request/Request';
import LoginPage from './pages/auth/LoginPage';
import SignUpPage from './pages/auth/SignUpPage';
import AuthProvider from "./context/AuthContext";
import useAuth from "./hooks/useAuth";
import AssignmentResult from "./pages/assignment/AssignmentResult";
import ProfilePage from "./pages/profile/ProfilePage";
import School from "./pages/class/School";
import TeacherAssignment from "./pages/manage-teacher/TeacherAssignment";
const App = () => {
    const { isAuthenticated } = useAuth();
    return (_jsx(Router, { children: _jsx(AuthProvider, { children: _jsxs(Routes, { children: [_jsx(Route, { path: "/", element: _jsx(HomePage, {}) }), _jsx(Route, { path: "/unauthorized", element: _jsx(Unauthorized, {}) }), _jsx(Route, { path: "/login", element: _jsx(LoginPage, {}) }), _jsx(Route, { path: "/signup", element: _jsx(SignUpPage, {}) }), _jsx(Route, { element: _jsx(ProtectedRoute, { isAllowed: !isAuthenticated }), children: _jsxs(Route, { element: _jsx(AdminLayout, {}), children: [_jsx(Route, { path: "/principal", element: _jsx(Navigate, { to: "/principal/dashboard", replace: true }) }), _jsx(Route, { path: "/principal/dashboard", element: _jsx(Dashboard, {}) }), _jsx(Route, { path: "/principal/school", element: _jsx(School, {}) }), _jsx(Route, { path: "/principal/class", element: _jsx(Class, {}) }), _jsx(Route, { path: "/principal/document", element: _jsx(DocumentPage, {}) }), _jsx(Route, { path: "/principal/document/:userId", element: _jsx(DocumentPage, {}) }), _jsx(Route, { path: "/principal/request", element: _jsx(Request, {}) }), _jsx(Route, { path: "/principal/teacher-assignment", element: _jsx(TeacherAssignment, {}) })] }) }), _jsx(Route, { element: _jsx(ProtectedRoute, { isAllowed: !isAuthenticated }), children: _jsxs(Route, { element: _jsx(AdminLayout, {}), children: [_jsx(Route, { path: "/teacher", element: _jsx(Navigate, { to: "/teacher/dashboard", replace: true }) }), _jsx(Route, { path: "/profile", element: _jsx(ProfilePage, {}) }), _jsx(Route, { path: "/teacher/dashboard", element: _jsx(Dashboard, {}) }), _jsx(Route, { path: "/teacher/class", element: _jsx(Class, {}) }), _jsx(Route, { path: "/teacher/document", element: _jsx(DocumentPage, {}) }), _jsx(Route, { path: "/teacher/request", element: _jsx(Request, {}) })] }) }), _jsx(Route, { element: _jsx(ProtectedRoute, { isAllowed: !isAuthenticated }), children: _jsxs(Route, { element: _jsx(UserLayout, {}), children: [_jsx(Route, { path: "/student", element: _jsx(UserPage, {}) }), _jsx(Route, { path: "/student/books", element: _jsx(UserBookSection, {}) }), _jsx(Route, { path: '/student/reading-books', element: _jsx(UserBookReadingList, {}) }), _jsx(Route, { path: "/student/reading-books/book/:id", element: _jsx(BookDetailPage, {}) }), _jsx(Route, { path: "/student/assignments", element: _jsx(AssignmentPage, {}) }), _jsx(Route, { path: "/student/assignments/:id", element: _jsx(AssignmentDetail, {}) }), _jsx(Route, { path: "/student/result", element: _jsx(AssignmentResult, {}) })] }) }), _jsx(Route, { element: _jsx(ProtectedRoute, { isAllowed: !isAuthenticated }), children: _jsxs(Route, { element: _jsx(AdminLayout, {}), children: [_jsx(Route, { path: "/librarian", element: _jsx(Navigate, { to: "/librarian/dashboard", replace: true }) }), _jsx(Route, { path: "/librarian/dashboard", element: _jsx(Dashboard, {}) }), _jsx(Route, { path: "/library", element: _jsx(StatisticalPage, {}) }), _jsx(Route, { path: "/librarian/document", element: _jsx(DocumentPage, {}) }), _jsx(Route, { path: "/librarian/books", element: _jsx(AddBookPage, {}) })] }) })] }) }) }));
};
export default App;
